name: Build & Push Production Docker Image

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  
  sonar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    needs: [sonar]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Repository
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_REPO }}:latest --tag ghcr.io/${{ github.repository }}:latest
    - name: Push the Docker image
      run: |
          docker push ${{ secrets.DOCKER_REPO }}:latest
          docker push ghcr.io/${{ github.repository }}:latest
      if: github.ref == 'refs/heads/main'
        
    - name: Notify IRC Success
      run: |
        export COMMIT_MSG=$(git log -1 --pretty=%B)
        export MESSAGE="Build of ${{ secrets.DOCKER_REPO }}:latest completed successfully with commit message: $COMMIT_MSG. See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        curl -X POST -H "Content-Type: application/json" -d "{\"message\": \"$MESSAGE\", \"password\": \"${{ secrets.WMB_PASSWORD }}\", \"colourcode\": 3}" https://convos.findlayis.me/wmb/message
      if: success()

    - name: Notify IRC Failure
      run: |
        export COMMIT_MSG=$(git log -1 --pretty=%B)
        export MESSAGE="Build of ${{ secrets.DOCKER_REPO }}:latest failed with commit message: $COMMIT_MSG. See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        curl -X POST -H "Content-Type: application/json" -d "{\"message\": \"$MESSAGE\", \"password\": \"${{ secrets.WMB_PASSWORD }}\", \"colourcode\": 4}" https://convos.findlayis.me/wmb/message
      if: failure()


  deploy:
      needs: build
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main'
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up kubectl
          uses: azure/setup-kubectl@v4
          # with:
          #   version: 'v1.27.0'  # Adjust the version as per your Kubernetes version

        - name: Retrieve kubeconfig from Vault
          uses: hashicorp/vault-action@v2.4.0
          with:
            url: https://00005175.xyz:8200
            method: token
            token: ${{ secrets.VAULT_TOKEN }}
            secrets: kv/data/pipeline/k3s kubeconfig
            exportEnv: true
        
        - name: Set kubeconfig
          run: |
            echo "${{ steps.secrets.outputs.kubeconfig }}" > $HOME/.kube/config
            echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
          
        - name: Restart Deployment
          run: |
            kubectl -n staging rollout restart deployment chuckfindlayisme
            kubectl -n production rollout restart deployment chuckfindlayisme

        - name: Smoke test production deployment
          uses: lakuapik/gh-actions-http-status@v1
          with:
            sites: '["https://chuck.findlayis.me/", "https://chuck.findlayis.me/404"]'
            expected: '[200, 404]'

        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Notify IRC Success
          run: |
            export COMMIT_MSG=$(git log -1 --pretty=%B)
            export MESSAGE="Prod deploy for https://github.com/${{ github.repository }} completed successfully with commit message: $COMMIT_MSG. See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            curl -X POST -H "Content-Type: application/json" -d "{\"message\": \"$MESSAGE\", \"password\": \"${{ secrets.WMB_PASSWORD }}\", \"colourcode\": 3}" https://convos.findlayis.me/wmb/message
          if: success()
        - name: Notify IRC Failure
          run: |
            export COMMIT_MSG=$(git log -1 --pretty=%B)
            export MESSAGE="Prod deploy for https://github.com/${{ github.repository }} failed with commit message: $COMMIT_MSG. See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            curl -X POST -H "Content-Type: application/json" -d "{\"message\": \"$MESSAGE\", \"password\": \"${{ secrets.WMB_PASSWORD }}\", \"colourcode\": 4}" https://convos.findlayis.me/wmb/message
          if: failure()